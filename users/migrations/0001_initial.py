# Generated by Django 5.1.3 on 2024-12-18 21:59

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('HotelManagement', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('admin', 'مدير النظام'), ('hotel_manager', 'مدير فندق'), ('hotel_employee', 'موظف فندق'), ('customer', 'عميل')], default='customer', help_text='نوع حساب المستخدم في النظام', max_length=20, verbose_name='نوع المستخدم')),
                ('phone', models.CharField(blank=True, help_text='رقم الهاتف مع رمز الدولة', max_length=20, null=True, validators=[django.core.validators.RegexValidator(message="رقم الهاتف يجب أن يكون بالصيغة: '+999999999'. يسمح بإدخال من 9 إلى 15 رقم.", regex='^\\+?1?\\d{9,15}$')], verbose_name='رقم الهاتف')),
                ('image', models.ImageField(blank=True, help_text='الصورة الشخصية للمستخدم', null=True, upload_to='users/%Y/%m/%d/', verbose_name='الصورة الشخصية')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'مستخدم',
                'verbose_name_plural': 'المستخدمين',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ الحذف')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Slug')),
                ('table_name', models.CharField(help_text='اسم الجدول الذي تم تنفيذ الإجراء عليه', max_length=100, verbose_name='اسم الجدول')),
                ('record_id', models.IntegerField(help_text='معرف السجل الذي تم تنفيذ الإجراء عليه', verbose_name='معرف السجل')),
                ('action', models.CharField(choices=[('create', 'إنشاء'), ('update', 'تحديث'), ('delete', 'حذف'), ('login', 'تسجيل دخول'), ('logout', 'تسجيل خروج')], help_text='نوع الإجراء الذي تم تنفيذه', max_length=50, verbose_name='الإجراء')),
                ('details', models.JSONField(blank=True, help_text='تفاصيل إضافية عن الإجراء', null=True, verbose_name='تفاصيل')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='عنوان IP للمستخدم', null=True, verbose_name='عنوان IP')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='المنشى')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='المعدل')),
                ('user', models.ForeignKey(help_text='المستخدم الذي قام بالإجراء', on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'سجل النشاط',
                'verbose_name_plural': 'سجلات النشاط',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HotelAccountRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ الحذف')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Slug')),
                ('hotel_name', models.CharField(help_text='اسم الفندق كما سيظهر في النظام', max_length=100, verbose_name='اسم الفندق')),
                ('owner_name', models.CharField(help_text='الاسم الكامل لمالك الفندق', max_length=100, verbose_name='اسم المالك')),
                ('email', models.EmailField(help_text='البريد الإلكتروني الرسمي للفندق', max_length=254, unique=True, verbose_name='البريد الإلكتروني')),
                ('phone', models.CharField(help_text='رقم الهاتف الرسمي للفندق', max_length=20, validators=[django.core.validators.RegexValidator(message="رقم الهاتف يجب أن يكون بالصيغة: '+999999999'. يسمح بإدخال من 9 إلى 15 رقم.", regex='^\\+?1?\\d{9,15}$')], verbose_name='رقم الهاتف')),
                ('hotel_description', models.TextField(help_text='وصف تفصيلي للفندق ومرافقه وخدماته', verbose_name='وصف الفندق')),
                ('business_license_number', models.CharField(blank=True, help_text='رقم الرخصة التجارية للفندق', max_length=50, null=True, verbose_name='رقم الرخصة التجارية')),
                ('document_path', models.FileField(help_text='المستندات الرسمية للفندق (رخصة العمل، السجل التجاري، إلخ)', upload_to='hotel_documents/%Y/%m/%d/', verbose_name='مستندات الفندق')),
                ('verify_number', models.CharField(help_text='رقم التحقق الخاص بطلب التسجيل', max_length=50, unique=True, verbose_name='رقم التحقق')),
                ('status', models.CharField(choices=[('pending', 'قيد الانتظار'), ('approved', 'تمت الموافقة'), ('rejected', 'مرفوض'), ('cancelled', 'ملغي')], default='pending', help_text='الحالة الحالية لطلب التسجيل', max_length=20, verbose_name='حالة الطلب')),
                ('admin_notes', models.TextField(blank=True, help_text='ملاحظات المسؤول حول الطلب', null=True, verbose_name='ملاحظات المسؤول')),
                ('password', models.CharField(help_text='كلمة السر المؤقتة للحساب', max_length=255, verbose_name='كلمة السر')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='المنشى')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='المعدل')),
            ],
            options={
                'verbose_name': 'طلب حساب فندق',
                'verbose_name_plural': 'طلبات حسابات الفنادق',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PermissionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ الحذف')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=100, verbose_name='اسم المجموعة')),
                ('description', models.TextField(blank=True, verbose_name='وصف المجموعة')),
                ('is_system_group', models.BooleanField(default=False, help_text='إذا كانت True، فهذه مجموعة نظام لا يمكن تعديلها', verbose_name='مجموعة نظام')),
                ('can_view_hotel', models.BooleanField(default=False, verbose_name='عرض معلومات الفندق')),
                ('can_edit_hotel', models.BooleanField(default=False, verbose_name='تعديل معلومات الفندق')),
                ('can_view_rooms', models.BooleanField(default=False, verbose_name='عرض الغرف')),
                ('can_add_rooms', models.BooleanField(default=False, verbose_name='إضافة غرف')),
                ('can_edit_rooms', models.BooleanField(default=False, verbose_name='تعديل الغرف')),
                ('can_delete_rooms', models.BooleanField(default=False, verbose_name='حذف الغرف')),
                ('can_view_bookings', models.BooleanField(default=False, verbose_name='عرض الحجوزات')),
                ('can_manage_bookings', models.BooleanField(default=False, verbose_name='إدارة الحجوزات')),
                ('can_view_reviews', models.BooleanField(default=False, verbose_name='عرض التقييمات')),
                ('can_manage_reviews', models.BooleanField(default=False, verbose_name='إدارة التقييمات')),
                ('can_view_offers', models.BooleanField(default=False, verbose_name='عرض العروض')),
                ('can_manage_offers', models.BooleanField(default=False, verbose_name='إدارة العروض')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='المنشى')),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='permission_groups', to='HotelManagement.hotel', verbose_name='الفندق')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='المعدل')),
            ],
            options={
                'verbose_name': 'مجموعة صلاحيات',
                'verbose_name_plural': 'مجموعات الصلاحيات',
            },
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التعديل')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='تاريخ الحذف')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Slug')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='المنشى')),
                ('permission_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_permissions', to='users.permissiongroup', verbose_name='مجموعة الصلاحيات')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='المعدل')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_user_permissions', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'صلاحية مستخدم',
                'verbose_name_plural': 'صلاحيات المستخدمين',
            },
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['username'], name='users_custo_usernam_a8ad03_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['email'], name='users_custo_email_c80f75_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['first_name', 'last_name'], name='users_custo_first_n_27fc97_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['user_type'], name='users_custo_user_ty_f25e6c_idx'),
        ),
        migrations.AddIndex(
            model_name='activitylog',
            index=models.Index(fields=['user', '-created_at'], name='users_activ_user_id_e43008_idx'),
        ),
        migrations.AddIndex(
            model_name='activitylog',
            index=models.Index(fields=['table_name', 'record_id'], name='users_activ_table_n_d89c14_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='permissiongroup',
            unique_together={('name', 'hotel')},
        ),
        migrations.AlterUniqueTogether(
            name='userpermission',
            unique_together={('user', 'permission_group')},
        ),
    ]
